<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="generator" content="Asciidoctor 2.0.20">
<title>Starter tsup</title>
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Open+Sans:300,300italic,400,400italic,600,600italic%7CNoto+Serif:400,400italic,700,700italic%7CDroid+Sans+Mono:400,700">
<style>
/*! Asciidoctor default stylesheet | MIT License | https://asciidoctor.org */
/* Uncomment the following line when using as a custom stylesheet */
/* @import "https://fonts.googleapis.com/css?family=Open+Sans:300,300italic,400,400italic,600,600italic%7CNoto+Serif:400,400italic,700,700italic%7CDroid+Sans+Mono:400,700"; */
html{font-family:sans-serif;-webkit-text-size-adjust:100%}
a{background:none}
a:focus{outline:thin dotted}
a:active,a:hover{outline:0}
h1{font-size:2em;margin:.67em 0}
b,strong{font-weight:bold}
abbr{font-size:.9em}
abbr[title]{cursor:help;border-bottom:1px dotted #dddddf;text-decoration:none}
dfn{font-style:italic}
hr{height:0}
mark{background:#ff0;color:#000}
code,kbd,pre,samp{font-family:monospace;font-size:1em}
pre{white-space:pre-wrap}
q{quotes:"\201C" "\201D" "\2018" "\2019"}
small{font-size:80%}
sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}
sup{top:-.5em}
sub{bottom:-.25em}
img{border:0}
svg:not(:root){overflow:hidden}
figure{margin:0}
audio,video{display:inline-block}
audio:not([controls]){display:none;height:0}
fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}
legend{border:0;padding:0}
button,input,select,textarea{font-family:inherit;font-size:100%;margin:0}
button,input{line-height:normal}
button,select{text-transform:none}
button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}
button[disabled],html input[disabled]{cursor:default}
input[type=checkbox],input[type=radio]{padding:0}
button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}
textarea{overflow:auto;vertical-align:top}
table{border-collapse:collapse;border-spacing:0}
*,::before,::after{box-sizing:border-box}
html,body{font-size:100%}
body{background:#fff;color:rgba(0,0,0,.8);padding:0;margin:0;font-family:"Noto Serif","DejaVu Serif",serif;line-height:1;position:relative;cursor:auto;-moz-tab-size:4;-o-tab-size:4;tab-size:4;word-wrap:anywhere;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased}
a:hover{cursor:pointer}
img,object,embed{max-width:100%;height:auto}
object,embed{height:100%}
img{-ms-interpolation-mode:bicubic}
.left{float:left!important}
.right{float:right!important}
.text-left{text-align:left!important}
.text-right{text-align:right!important}
.text-center{text-align:center!important}
.text-justify{text-align:justify!important}
.hide{display:none}
img,object,svg{display:inline-block;vertical-align:middle}
textarea{height:auto;min-height:50px}
select{width:100%}
.subheader,.admonitionblock td.content>.title,.audioblock>.title,.exampleblock>.title,.imageblock>.title,.listingblock>.title,.literalblock>.title,.stemblock>.title,.openblock>.title,.paragraph>.title,.quoteblock>.title,table.tableblock>.title,.verseblock>.title,.videoblock>.title,.dlist>.title,.olist>.title,.ulist>.title,.qlist>.title,.hdlist>.title{line-height:1.45;color:#7a2518;font-weight:400;margin-top:0;margin-bottom:.25em}
div,dl,dt,dd,ul,ol,li,h1,h2,h3,#toctitle,.sidebarblock>.content>.title,h4,h5,h6,pre,form,p,blockquote,th,td{margin:0;padding:0}
a{color:#2156a5;text-decoration:underline;line-height:inherit}
a:hover,a:focus{color:#1d4b8f}
a img{border:0}
p{line-height:1.6;margin-bottom:1.25em;text-rendering:optimizeLegibility}
p aside{font-size:.875em;line-height:1.35;font-style:italic}
h1,h2,h3,#toctitle,.sidebarblock>.content>.title,h4,h5,h6{font-family:"Open Sans","DejaVu Sans",sans-serif;font-weight:300;font-style:normal;color:#ba3925;text-rendering:optimizeLegibility;margin-top:1em;margin-bottom:.5em;line-height:1.0125em}
h1 small,h2 small,h3 small,#toctitle small,.sidebarblock>.content>.title small,h4 small,h5 small,h6 small{font-size:60%;color:#e99b8f;line-height:0}
h1{font-size:2.125em}
h2{font-size:1.6875em}
h3,#toctitle,.sidebarblock>.content>.title{font-size:1.375em}
h4,h5{font-size:1.125em}
h6{font-size:1em}
hr{border:solid #dddddf;border-width:1px 0 0;clear:both;margin:1.25em 0 1.1875em}
em,i{font-style:italic;line-height:inherit}
strong,b{font-weight:bold;line-height:inherit}
small{font-size:60%;line-height:inherit}
code{font-family:"Droid Sans Mono","DejaVu Sans Mono",monospace;font-weight:400;color:rgba(0,0,0,.9)}
ul,ol,dl{line-height:1.6;margin-bottom:1.25em;list-style-position:outside;font-family:inherit}
ul,ol{margin-left:1.5em}
ul li ul,ul li ol{margin-left:1.25em;margin-bottom:0}
ul.circle{list-style-type:circle}
ul.disc{list-style-type:disc}
ul.square{list-style-type:square}
ul.circle ul:not([class]),ul.disc ul:not([class]),ul.square ul:not([class]){list-style:inherit}
ol li ul,ol li ol{margin-left:1.25em;margin-bottom:0}
dl dt{margin-bottom:.3125em;font-weight:bold}
dl dd{margin-bottom:1.25em}
blockquote{margin:0 0 1.25em;padding:.5625em 1.25em 0 1.1875em;border-left:1px solid #ddd}
blockquote,blockquote p{line-height:1.6;color:rgba(0,0,0,.85)}
@media screen and (min-width:768px){h1,h2,h3,#toctitle,.sidebarblock>.content>.title,h4,h5,h6{line-height:1.2}
h1{font-size:2.75em}
h2{font-size:2.3125em}
h3,#toctitle,.sidebarblock>.content>.title{font-size:1.6875em}
h4{font-size:1.4375em}}
table{background:#fff;margin-bottom:1.25em;border:1px solid #dedede;word-wrap:normal}
table thead,table tfoot{background:#f7f8f7}
table thead tr th,table thead tr td,table tfoot tr th,table tfoot tr td{padding:.5em .625em .625em;font-size:inherit;color:rgba(0,0,0,.8);text-align:left}
table tr th,table tr td{padding:.5625em .625em;font-size:inherit;color:rgba(0,0,0,.8)}
table tr.even,table tr.alt{background:#f8f8f7}
table thead tr th,table tfoot tr th,table tbody tr td,table tr td,table tfoot tr td{line-height:1.6}
h1,h2,h3,#toctitle,.sidebarblock>.content>.title,h4,h5,h6{line-height:1.2;word-spacing:-.05em}
h1 strong,h2 strong,h3 strong,#toctitle strong,.sidebarblock>.content>.title strong,h4 strong,h5 strong,h6 strong{font-weight:400}
.center{margin-left:auto;margin-right:auto}
.stretch{width:100%}
.clearfix::before,.clearfix::after,.float-group::before,.float-group::after{content:" ";display:table}
.clearfix::after,.float-group::after{clear:both}
:not(pre).nobreak{word-wrap:normal}
:not(pre).nowrap{white-space:nowrap}
:not(pre).pre-wrap{white-space:pre-wrap}
:not(pre):not([class^=L])>code{font-size:.9375em;font-style:normal!important;letter-spacing:0;padding:.1em .5ex;word-spacing:-.15em;background:#f7f7f8;border-radius:4px;line-height:1.45;text-rendering:optimizeSpeed}
pre{color:rgba(0,0,0,.9);font-family:"Droid Sans Mono","DejaVu Sans Mono",monospace;line-height:1.45;text-rendering:optimizeSpeed}
pre code,pre pre{color:inherit;font-size:inherit;line-height:inherit}
pre>code{display:block}
pre.nowrap,pre.nowrap pre{white-space:pre;word-wrap:normal}
em em{font-style:normal}
strong strong{font-weight:400}
.keyseq{color:rgba(51,51,51,.8)}
kbd{font-family:"Droid Sans Mono","DejaVu Sans Mono",monospace;display:inline-block;color:rgba(0,0,0,.8);font-size:.65em;line-height:1.45;background:#f7f7f7;border:1px solid #ccc;border-radius:3px;box-shadow:0 1px 0 rgba(0,0,0,.2),inset 0 0 0 .1em #fff;margin:0 .15em;padding:.2em .5em;vertical-align:middle;position:relative;top:-.1em;white-space:nowrap}
.keyseq kbd:first-child{margin-left:0}
.keyseq kbd:last-child{margin-right:0}
.menuseq,.menuref{color:#000}
.menuseq b:not(.caret),.menuref{font-weight:inherit}
.menuseq{word-spacing:-.02em}
.menuseq b.caret{font-size:1.25em;line-height:.8}
.menuseq i.caret{font-weight:bold;text-align:center;width:.45em}
b.button::before,b.button::after{position:relative;top:-1px;font-weight:400}
b.button::before{content:"[";padding:0 3px 0 2px}
b.button::after{content:"]";padding:0 2px 0 3px}
p a>code:hover{color:rgba(0,0,0,.9)}
#header,#content,#footnotes,#footer{width:100%;margin:0 auto;max-width:62.5em;*zoom:1;position:relative;padding-left:.9375em;padding-right:.9375em}
#header::before,#header::after,#content::before,#content::after,#footnotes::before,#footnotes::after,#footer::before,#footer::after{content:" ";display:table}
#header::after,#content::after,#footnotes::after,#footer::after{clear:both}
#content{margin-top:1.25em}
#content::before{content:none}
#header>h1:first-child{color:rgba(0,0,0,.85);margin-top:2.25rem;margin-bottom:0}
#header>h1:first-child+#toc{margin-top:8px;border-top:1px solid #dddddf}
#header>h1:only-child,body.toc2 #header>h1:nth-last-child(2){border-bottom:1px solid #dddddf;padding-bottom:8px}
#header .details{border-bottom:1px solid #dddddf;line-height:1.45;padding-top:.25em;padding-bottom:.25em;padding-left:.25em;color:rgba(0,0,0,.6);display:flex;flex-flow:row wrap}
#header .details span:first-child{margin-left:-.125em}
#header .details span.email a{color:rgba(0,0,0,.85)}
#header .details br{display:none}
#header .details br+span::before{content:"\00a0\2013\00a0"}
#header .details br+span.author::before{content:"\00a0\22c5\00a0";color:rgba(0,0,0,.85)}
#header .details br+span#revremark::before{content:"\00a0|\00a0"}
#header #revnumber{text-transform:capitalize}
#header #revnumber::after{content:"\00a0"}
#content>h1:first-child:not([class]){color:rgba(0,0,0,.85);border-bottom:1px solid #dddddf;padding-bottom:8px;margin-top:0;padding-top:1rem;margin-bottom:1.25rem}
#toc{border-bottom:1px solid #e7e7e9;padding-bottom:.5em}
#toc>ul{margin-left:.125em}
#toc ul.sectlevel0>li>a{font-style:italic}
#toc ul.sectlevel0 ul.sectlevel1{margin:.5em 0}
#toc ul{font-family:"Open Sans","DejaVu Sans",sans-serif;list-style-type:none}
#toc li{line-height:1.3334;margin-top:.3334em}
#toc a{text-decoration:none}
#toc a:active{text-decoration:underline}
#toctitle{color:#7a2518;font-size:1.2em}
@media screen and (min-width:768px){#toctitle{font-size:1.375em}
body.toc2{padding-left:15em;padding-right:0}
#toc.toc2{margin-top:0!important;background:#f8f8f7;position:fixed;width:15em;left:0;top:0;border-right:1px solid #e7e7e9;border-top-width:0!important;border-bottom-width:0!important;z-index:1000;padding:1.25em 1em;height:100%;overflow:auto}
#toc.toc2 #toctitle{margin-top:0;margin-bottom:.8rem;font-size:1.2em}
#toc.toc2>ul{font-size:.9em;margin-bottom:0}
#toc.toc2 ul ul{margin-left:0;padding-left:1em}
#toc.toc2 ul.sectlevel0 ul.sectlevel1{padding-left:0;margin-top:.5em;margin-bottom:.5em}
body.toc2.toc-right{padding-left:0;padding-right:15em}
body.toc2.toc-right #toc.toc2{border-right-width:0;border-left:1px solid #e7e7e9;left:auto;right:0}}
@media screen and (min-width:1280px){body.toc2{padding-left:20em;padding-right:0}
#toc.toc2{width:20em}
#toc.toc2 #toctitle{font-size:1.375em}
#toc.toc2>ul{font-size:.95em}
#toc.toc2 ul ul{padding-left:1.25em}
body.toc2.toc-right{padding-left:0;padding-right:20em}}
#content #toc{border:1px solid #e0e0dc;margin-bottom:1.25em;padding:1.25em;background:#f8f8f7;border-radius:4px}
#content #toc>:first-child{margin-top:0}
#content #toc>:last-child{margin-bottom:0}
#footer{max-width:none;background:rgba(0,0,0,.8);padding:1.25em}
#footer-text{color:hsla(0,0%,100%,.8);line-height:1.44}
#content{margin-bottom:.625em}
.sect1{padding-bottom:.625em}
@media screen and (min-width:768px){#content{margin-bottom:1.25em}
.sect1{padding-bottom:1.25em}}
.sect1:last-child{padding-bottom:0}
.sect1+.sect1{border-top:1px solid #e7e7e9}
#content h1>a.anchor,h2>a.anchor,h3>a.anchor,#toctitle>a.anchor,.sidebarblock>.content>.title>a.anchor,h4>a.anchor,h5>a.anchor,h6>a.anchor{position:absolute;z-index:1001;width:1.5ex;margin-left:-1.5ex;display:block;text-decoration:none!important;visibility:hidden;text-align:center;font-weight:400}
#content h1>a.anchor::before,h2>a.anchor::before,h3>a.anchor::before,#toctitle>a.anchor::before,.sidebarblock>.content>.title>a.anchor::before,h4>a.anchor::before,h5>a.anchor::before,h6>a.anchor::before{content:"\00A7";font-size:.85em;display:block;padding-top:.1em}
#content h1:hover>a.anchor,#content h1>a.anchor:hover,h2:hover>a.anchor,h2>a.anchor:hover,h3:hover>a.anchor,#toctitle:hover>a.anchor,.sidebarblock>.content>.title:hover>a.anchor,h3>a.anchor:hover,#toctitle>a.anchor:hover,.sidebarblock>.content>.title>a.anchor:hover,h4:hover>a.anchor,h4>a.anchor:hover,h5:hover>a.anchor,h5>a.anchor:hover,h6:hover>a.anchor,h6>a.anchor:hover{visibility:visible}
#content h1>a.link,h2>a.link,h3>a.link,#toctitle>a.link,.sidebarblock>.content>.title>a.link,h4>a.link,h5>a.link,h6>a.link{color:#ba3925;text-decoration:none}
#content h1>a.link:hover,h2>a.link:hover,h3>a.link:hover,#toctitle>a.link:hover,.sidebarblock>.content>.title>a.link:hover,h4>a.link:hover,h5>a.link:hover,h6>a.link:hover{color:#a53221}
details,.audioblock,.imageblock,.literalblock,.listingblock,.stemblock,.videoblock{margin-bottom:1.25em}
details{margin-left:1.25rem}
details>summary{cursor:pointer;display:block;position:relative;line-height:1.6;margin-bottom:.625rem;outline:none;-webkit-tap-highlight-color:transparent}
details>summary::-webkit-details-marker{display:none}
details>summary::before{content:"";border:solid transparent;border-left:solid;border-width:.3em 0 .3em .5em;position:absolute;top:.5em;left:-1.25rem;transform:translateX(15%)}
details[open]>summary::before{border:solid transparent;border-top:solid;border-width:.5em .3em 0;transform:translateY(15%)}
details>summary::after{content:"";width:1.25rem;height:1em;position:absolute;top:.3em;left:-1.25rem}
.admonitionblock td.content>.title,.audioblock>.title,.exampleblock>.title,.imageblock>.title,.listingblock>.title,.literalblock>.title,.stemblock>.title,.openblock>.title,.paragraph>.title,.quoteblock>.title,table.tableblock>.title,.verseblock>.title,.videoblock>.title,.dlist>.title,.olist>.title,.ulist>.title,.qlist>.title,.hdlist>.title{text-rendering:optimizeLegibility;text-align:left;font-family:"Noto Serif","DejaVu Serif",serif;font-size:1rem;font-style:italic}
table.tableblock.fit-content>caption.title{white-space:nowrap;width:0}
.paragraph.lead>p,#preamble>.sectionbody>[class=paragraph]:first-of-type p{font-size:1.21875em;line-height:1.6;color:rgba(0,0,0,.85)}
.admonitionblock>table{border-collapse:separate;border:0;background:none;width:100%}
.admonitionblock>table td.icon{text-align:center;width:80px}
.admonitionblock>table td.icon img{max-width:none}
.admonitionblock>table td.icon .title{font-weight:bold;font-family:"Open Sans","DejaVu Sans",sans-serif;text-transform:uppercase}
.admonitionblock>table td.content{padding-left:1.125em;padding-right:1.25em;border-left:1px solid #dddddf;color:rgba(0,0,0,.6);word-wrap:anywhere}
.admonitionblock>table td.content>:last-child>:last-child{margin-bottom:0}
.exampleblock>.content{border:1px solid #e6e6e6;margin-bottom:1.25em;padding:1.25em;background:#fff;border-radius:4px}
.sidebarblock{border:1px solid #dbdbd6;margin-bottom:1.25em;padding:1.25em;background:#f3f3f2;border-radius:4px}
.sidebarblock>.content>.title{color:#7a2518;margin-top:0;text-align:center}
.exampleblock>.content>:first-child,.sidebarblock>.content>:first-child{margin-top:0}
.exampleblock>.content>:last-child,.exampleblock>.content>:last-child>:last-child,.exampleblock>.content .olist>ol>li:last-child>:last-child,.exampleblock>.content .ulist>ul>li:last-child>:last-child,.exampleblock>.content .qlist>ol>li:last-child>:last-child,.sidebarblock>.content>:last-child,.sidebarblock>.content>:last-child>:last-child,.sidebarblock>.content .olist>ol>li:last-child>:last-child,.sidebarblock>.content .ulist>ul>li:last-child>:last-child,.sidebarblock>.content .qlist>ol>li:last-child>:last-child{margin-bottom:0}
.literalblock pre,.listingblock>.content>pre{border-radius:4px;overflow-x:auto;padding:1em;font-size:.8125em}
@media screen and (min-width:768px){.literalblock pre,.listingblock>.content>pre{font-size:.90625em}}
@media screen and (min-width:1280px){.literalblock pre,.listingblock>.content>pre{font-size:1em}}
.literalblock pre,.listingblock>.content>pre:not(.highlight),.listingblock>.content>pre[class=highlight],.listingblock>.content>pre[class^="highlight "]{background:#f7f7f8}
.literalblock.output pre{color:#f7f7f8;background:rgba(0,0,0,.9)}
.listingblock>.content{position:relative}
.listingblock code[data-lang]::before{display:none;content:attr(data-lang);position:absolute;font-size:.75em;top:.425rem;right:.5rem;line-height:1;text-transform:uppercase;color:inherit;opacity:.5}
.listingblock:hover code[data-lang]::before{display:block}
.listingblock.terminal pre .command::before{content:attr(data-prompt);padding-right:.5em;color:inherit;opacity:.5}
.listingblock.terminal pre .command:not([data-prompt])::before{content:"$"}
.listingblock pre.highlightjs{padding:0}
.listingblock pre.highlightjs>code{padding:1em;border-radius:4px}
.listingblock pre.prettyprint{border-width:0}
.prettyprint{background:#f7f7f8}
pre.prettyprint .linenums{line-height:1.45;margin-left:2em}
pre.prettyprint li{background:none;list-style-type:inherit;padding-left:0}
pre.prettyprint li code[data-lang]::before{opacity:1}
pre.prettyprint li:not(:first-child) code[data-lang]::before{display:none}
table.linenotable{border-collapse:separate;border:0;margin-bottom:0;background:none}
table.linenotable td[class]{color:inherit;vertical-align:top;padding:0;line-height:inherit;white-space:normal}
table.linenotable td.code{padding-left:.75em}
table.linenotable td.linenos,pre.pygments .linenos{border-right:1px solid;opacity:.35;padding-right:.5em;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}
pre.pygments span.linenos{display:inline-block;margin-right:.75em}
.quoteblock{margin:0 1em 1.25em 1.5em;display:table}
.quoteblock:not(.excerpt)>.title{margin-left:-1.5em;margin-bottom:.75em}
.quoteblock blockquote,.quoteblock p{color:rgba(0,0,0,.85);font-size:1.15rem;line-height:1.75;word-spacing:.1em;letter-spacing:0;font-style:italic;text-align:justify}
.quoteblock blockquote{margin:0;padding:0;border:0}
.quoteblock blockquote::before{content:"\201c";float:left;font-size:2.75em;font-weight:bold;line-height:.6em;margin-left:-.6em;color:#7a2518;text-shadow:0 1px 2px rgba(0,0,0,.1)}
.quoteblock blockquote>.paragraph:last-child p{margin-bottom:0}
.quoteblock .attribution{margin-top:.75em;margin-right:.5ex;text-align:right}
.verseblock{margin:0 1em 1.25em}
.verseblock pre{font-family:"Open Sans","DejaVu Sans",sans-serif;font-size:1.15rem;color:rgba(0,0,0,.85);font-weight:300;text-rendering:optimizeLegibility}
.verseblock pre strong{font-weight:400}
.verseblock .attribution{margin-top:1.25rem;margin-left:.5ex}
.quoteblock .attribution,.verseblock .attribution{font-size:.9375em;line-height:1.45;font-style:italic}
.quoteblock .attribution br,.verseblock .attribution br{display:none}
.quoteblock .attribution cite,.verseblock .attribution cite{display:block;letter-spacing:-.025em;color:rgba(0,0,0,.6)}
.quoteblock.abstract blockquote::before,.quoteblock.excerpt blockquote::before,.quoteblock .quoteblock blockquote::before{display:none}
.quoteblock.abstract blockquote,.quoteblock.abstract p,.quoteblock.excerpt blockquote,.quoteblock.excerpt p,.quoteblock .quoteblock blockquote,.quoteblock .quoteblock p{line-height:1.6;word-spacing:0}
.quoteblock.abstract{margin:0 1em 1.25em;display:block}
.quoteblock.abstract>.title{margin:0 0 .375em;font-size:1.15em;text-align:center}
.quoteblock.excerpt>blockquote,.quoteblock .quoteblock{padding:0 0 .25em 1em;border-left:.25em solid #dddddf}
.quoteblock.excerpt,.quoteblock .quoteblock{margin-left:0}
.quoteblock.excerpt blockquote,.quoteblock.excerpt p,.quoteblock .quoteblock blockquote,.quoteblock .quoteblock p{color:inherit;font-size:1.0625rem}
.quoteblock.excerpt .attribution,.quoteblock .quoteblock .attribution{color:inherit;font-size:.85rem;text-align:left;margin-right:0}
p.tableblock:last-child{margin-bottom:0}
td.tableblock>.content{margin-bottom:1.25em;word-wrap:anywhere}
td.tableblock>.content>:last-child{margin-bottom:-1.25em}
table.tableblock,th.tableblock,td.tableblock{border:0 solid #dedede}
table.grid-all>*>tr>*{border-width:1px}
table.grid-cols>*>tr>*{border-width:0 1px}
table.grid-rows>*>tr>*{border-width:1px 0}
table.frame-all{border-width:1px}
table.frame-ends{border-width:1px 0}
table.frame-sides{border-width:0 1px}
table.frame-none>colgroup+*>:first-child>*,table.frame-sides>colgroup+*>:first-child>*{border-top-width:0}
table.frame-none>:last-child>:last-child>*,table.frame-sides>:last-child>:last-child>*{border-bottom-width:0}
table.frame-none>*>tr>:first-child,table.frame-ends>*>tr>:first-child{border-left-width:0}
table.frame-none>*>tr>:last-child,table.frame-ends>*>tr>:last-child{border-right-width:0}
table.stripes-all>*>tr,table.stripes-odd>*>tr:nth-of-type(odd),table.stripes-even>*>tr:nth-of-type(even),table.stripes-hover>*>tr:hover{background:#f8f8f7}
th.halign-left,td.halign-left{text-align:left}
th.halign-right,td.halign-right{text-align:right}
th.halign-center,td.halign-center{text-align:center}
th.valign-top,td.valign-top{vertical-align:top}
th.valign-bottom,td.valign-bottom{vertical-align:bottom}
th.valign-middle,td.valign-middle{vertical-align:middle}
table thead th,table tfoot th{font-weight:bold}
tbody tr th{background:#f7f8f7}
tbody tr th,tbody tr th p,tfoot tr th,tfoot tr th p{color:rgba(0,0,0,.8);font-weight:bold}
p.tableblock>code:only-child{background:none;padding:0}
p.tableblock{font-size:1em}
ol{margin-left:1.75em}
ul li ol{margin-left:1.5em}
dl dd{margin-left:1.125em}
dl dd:last-child,dl dd:last-child>:last-child{margin-bottom:0}
li p,ul dd,ol dd,.olist .olist,.ulist .ulist,.ulist .olist,.olist .ulist{margin-bottom:.625em}
ul.checklist,ul.none,ol.none,ul.no-bullet,ol.no-bullet,ol.unnumbered,ul.unstyled,ol.unstyled{list-style-type:none}
ul.no-bullet,ol.no-bullet,ol.unnumbered{margin-left:.625em}
ul.unstyled,ol.unstyled{margin-left:0}
li>p:empty:only-child::before{content:"";display:inline-block}
ul.checklist>li>p:first-child{margin-left:-1em}
ul.checklist>li>p:first-child>.fa-square-o:first-child,ul.checklist>li>p:first-child>.fa-check-square-o:first-child{width:1.25em;font-size:.8em;position:relative;bottom:.125em}
ul.checklist>li>p:first-child>input[type=checkbox]:first-child{margin-right:.25em}
ul.inline{display:flex;flex-flow:row wrap;list-style:none;margin:0 0 .625em -1.25em}
ul.inline>li{margin-left:1.25em}
.unstyled dl dt{font-weight:400;font-style:normal}
ol.arabic{list-style-type:decimal}
ol.decimal{list-style-type:decimal-leading-zero}
ol.loweralpha{list-style-type:lower-alpha}
ol.upperalpha{list-style-type:upper-alpha}
ol.lowerroman{list-style-type:lower-roman}
ol.upperroman{list-style-type:upper-roman}
ol.lowergreek{list-style-type:lower-greek}
.hdlist>table,.colist>table{border:0;background:none}
.hdlist>table>tbody>tr,.colist>table>tbody>tr{background:none}
td.hdlist1,td.hdlist2{vertical-align:top;padding:0 .625em}
td.hdlist1{font-weight:bold;padding-bottom:1.25em}
td.hdlist2{word-wrap:anywhere}
.literalblock+.colist,.listingblock+.colist{margin-top:-.5em}
.colist td:not([class]):first-child{padding:.4em .75em 0;line-height:1;vertical-align:top}
.colist td:not([class]):first-child img{max-width:none}
.colist td:not([class]):last-child{padding:.25em 0}
.thumb,.th{line-height:0;display:inline-block;border:4px solid #fff;box-shadow:0 0 0 1px #ddd}
.imageblock.left{margin:.25em .625em 1.25em 0}
.imageblock.right{margin:.25em 0 1.25em .625em}
.imageblock>.title{margin-bottom:0}
.imageblock.thumb,.imageblock.th{border-width:6px}
.imageblock.thumb>.title,.imageblock.th>.title{padding:0 .125em}
.image.left,.image.right{margin-top:.25em;margin-bottom:.25em;display:inline-block;line-height:0}
.image.left{margin-right:.625em}
.image.right{margin-left:.625em}
a.image{text-decoration:none;display:inline-block}
a.image object{pointer-events:none}
sup.footnote,sup.footnoteref{font-size:.875em;position:static;vertical-align:super}
sup.footnote a,sup.footnoteref a{text-decoration:none}
sup.footnote a:active,sup.footnoteref a:active{text-decoration:underline}
#footnotes{padding-top:.75em;padding-bottom:.75em;margin-bottom:.625em}
#footnotes hr{width:20%;min-width:6.25em;margin:-.25em 0 .75em;border-width:1px 0 0}
#footnotes .footnote{padding:0 .375em 0 .225em;line-height:1.3334;font-size:.875em;margin-left:1.2em;margin-bottom:.2em}
#footnotes .footnote a:first-of-type{font-weight:bold;text-decoration:none;margin-left:-1.05em}
#footnotes .footnote:last-of-type{margin-bottom:0}
#content #footnotes{margin-top:-.625em;margin-bottom:0;padding:.75em 0}
div.unbreakable{page-break-inside:avoid}
.big{font-size:larger}
.small{font-size:smaller}
.underline{text-decoration:underline}
.overline{text-decoration:overline}
.line-through{text-decoration:line-through}
.aqua{color:#00bfbf}
.aqua-background{background:#00fafa}
.black{color:#000}
.black-background{background:#000}
.blue{color:#0000bf}
.blue-background{background:#0000fa}
.fuchsia{color:#bf00bf}
.fuchsia-background{background:#fa00fa}
.gray{color:#606060}
.gray-background{background:#7d7d7d}
.green{color:#006000}
.green-background{background:#007d00}
.lime{color:#00bf00}
.lime-background{background:#00fa00}
.maroon{color:#600000}
.maroon-background{background:#7d0000}
.navy{color:#000060}
.navy-background{background:#00007d}
.olive{color:#606000}
.olive-background{background:#7d7d00}
.purple{color:#600060}
.purple-background{background:#7d007d}
.red{color:#bf0000}
.red-background{background:#fa0000}
.silver{color:#909090}
.silver-background{background:#bcbcbc}
.teal{color:#006060}
.teal-background{background:#007d7d}
.white{color:#bfbfbf}
.white-background{background:#fafafa}
.yellow{color:#bfbf00}
.yellow-background{background:#fafa00}
span.icon>.fa{cursor:default}
a span.icon>.fa{cursor:inherit}
.admonitionblock td.icon [class^="fa icon-"]{font-size:2.5em;text-shadow:1px 1px 2px rgba(0,0,0,.5);cursor:default}
.admonitionblock td.icon .icon-note::before{content:"\f05a";color:#19407c}
.admonitionblock td.icon .icon-tip::before{content:"\f0eb";text-shadow:1px 1px 2px rgba(155,155,0,.8);color:#111}
.admonitionblock td.icon .icon-warning::before{content:"\f071";color:#bf6900}
.admonitionblock td.icon .icon-caution::before{content:"\f06d";color:#bf3400}
.admonitionblock td.icon .icon-important::before{content:"\f06a";color:#bf0000}
.conum[data-value]{display:inline-block;color:#fff!important;background:rgba(0,0,0,.8);border-radius:50%;text-align:center;font-size:.75em;width:1.67em;height:1.67em;line-height:1.67em;font-family:"Open Sans","DejaVu Sans",sans-serif;font-style:normal;font-weight:bold}
.conum[data-value] *{color:#fff!important}
.conum[data-value]+b{display:none}
.conum[data-value]::after{content:attr(data-value)}
pre .conum[data-value]{position:relative;top:-.125em}
b.conum *{color:inherit!important}
.conum:not([data-value]):empty{display:none}
dt,th.tableblock,td.content,div.footnote{text-rendering:optimizeLegibility}
h1,h2,p,td.content,span.alt,summary{letter-spacing:-.01em}
p strong,td.content strong,div.footnote strong{letter-spacing:-.005em}
p,blockquote,dt,td.content,td.hdlist1,span.alt,summary{font-size:1.0625rem}
p{margin-bottom:1.25rem}
.sidebarblock p,.sidebarblock dt,.sidebarblock td.content,p.tableblock{font-size:1em}
.exampleblock>.content{background:#fffef7;border-color:#e0e0dc;box-shadow:0 1px 4px #e0e0dc}
.print-only{display:none!important}
@page{margin:1.25cm .75cm}
@media print{*{box-shadow:none!important;text-shadow:none!important}
html{font-size:80%}
a{color:inherit!important;text-decoration:underline!important}
a.bare,a[href^="#"],a[href^="mailto:"]{text-decoration:none!important}
a[href^="http:"]:not(.bare)::after,a[href^="https:"]:not(.bare)::after{content:"(" attr(href) ")";display:inline-block;font-size:.875em;padding-left:.25em}
abbr[title]{border-bottom:1px dotted}
abbr[title]::after{content:" (" attr(title) ")"}
pre,blockquote,tr,img,object,svg{page-break-inside:avoid}
thead{display:table-header-group}
svg{max-width:100%}
p,blockquote,dt,td.content{font-size:1em;orphans:3;widows:3}
h2,h3,#toctitle,.sidebarblock>.content>.title{page-break-after:avoid}
#header,#content,#footnotes,#footer{max-width:none}
#toc,.sidebarblock,.exampleblock>.content{background:none!important}
#toc{border-bottom:1px solid #dddddf!important;padding-bottom:0!important}
body.book #header{text-align:center}
body.book #header>h1:first-child{border:0!important;margin:2.5em 0 1em}
body.book #header .details{border:0!important;display:block;padding:0!important}
body.book #header .details span:first-child{margin-left:0!important}
body.book #header .details br{display:block}
body.book #header .details br+span::before{content:none!important}
body.book #toc{border:0!important;text-align:left!important;padding:0!important;margin:0!important}
body.book #toc,body.book #preamble,body.book h1.sect0,body.book .sect1>h2{page-break-before:always}
.listingblock code[data-lang]::before{display:block}
#footer{padding:0 .9375em}
.hide-on-print{display:none!important}
.print-only{display:block!important}
.hide-for-print{display:none!important}
.show-for-print{display:inherit!important}}
@media amzn-kf8,print{#header>h1:first-child{margin-top:1.25rem}
.sect1{padding:0!important}
.sect1+.sect1{border:0}
#footer{background:none}
#footer-text{color:rgba(0,0,0,.6);font-size:.9em}}
@media amzn-kf8{#header,#content,#footnotes,#footer{padding:0}}
</style>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
</head>
<body class="article toc2 toc-right">
<div id="header">
<h1>Starter tsup</h1>
<div id="toc" class="toc2">
<div id="toctitle">Table of Contents</div>
<ul class="sectlevel1">
<li><a href="#features">1. Features</a></li>
<li><a href="#create_project">2. Create project</a></li>
<li><a href="#build_environment">3. Build environment</a>
<ul class="sectlevel2">
<li><a href="#gradle">3.1. Gradle</a>
<ul class="sectlevel3">
<li><a href="#version">3.1.1. Version</a></li>
<li><a href="#upgrade">3.1.2. Upgrade</a></li>
</ul>
</li>
<li><a href="#node">3.2. Node</a>
<ul class="sectlevel3">
<li><a href="#version_2">3.2.1. Version</a></li>
<li><a href="#gradle_node_plugin">3.2.2. Gradle node plugin</a></li>
<li><a href="#system_node">3.2.3. System Node</a></li>
</ul>
</li>
<li><a href="#incremental_build">3.3. Incremental build</a>
<ul class="sectlevel3">
<li><a href="#continuous_build">3.3.1. Continuous build</a></li>
<li><a href="#watch_mode">3.3.2. Watch mode</a></li>
<li><a href="#development_mode">3.3.3. Development mode</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#server_side_code">4. Server-side code</a>
<ul class="sectlevel2">
<li><a href="#java_libraries">4.1. Java libraries</a>
<ul class="sectlevel3">
<li><a href="#include">4.1.1. Include</a></li>
<li><a href="#externals">4.1.2. Externals</a></li>
<li><a href="#import">4.1.3. Import</a></li>
</ul>
</li>
<li><a href="#node_modules">4.2. Node modules</a>
<ul class="sectlevel3">
<li><a href="#installing">4.2.1. Installing</a></li>
<li><a href="#bundling">4.2.2. Bundling</a></li>
<li><a href="#polyfill_node">4.2.3. Polyfill Node</a></li>
<li><a href="#the_global_object">4.2.4. The Global object</a></li>
<li><a href="#injection">4.2.5. Injection</a></li>
<li><a href="#environment_variable_replacement">4.2.6. Environment variable replacement</a></li>
<li><a href="#code_splitting">4.2.7. Code splitting</a></li>
</ul>
</li>
<li><a href="#tree_shaking">4.3. Tree-shaking</a></li>
</ul>
</li>
<li><a href="#client_side">5. Client-side</a>
<ul class="sectlevel2">
<li><a href="#content_security_policy">5.1. Content Security Policy</a></li>
<li><a href="#react">5.2. React</a></li>
</ul>
</li>
<li><a href="#tools">6. Tools</a>
<ul class="sectlevel2">
<li><a href="#code_completion">6.1. Code completion</a></li>
<li><a href="#type_checking">6.2. Type checking</a></li>
<li><a href="#tsconfig_json">6.3. tsconfig.json</a></li>
</ul>
</li>
<li><a href="#code_hierarchy">7. Code Hierarchy</a>
<ul class="sectlevel2">
<li><a href="#admin">7.1. Admin</a>
<ul class="sectlevel3">
<li><a href="#tool">7.1.1. Tool</a></li>
<li><a href="#widgets">7.1.2. Widgets</a></li>
<li><a href="#dashboard">7.1.3. Dashboard</a></li>
<li><a href="#menu_item">7.1.4. Menu item</a></li>
<li><a href="#context_panel">7.1.5. Context panel</a></li>
</ul>
</li>
<li><a href="#assets">7.2. Assets</a>
<ul class="sectlevel3">
<li><a href="#assets_service">7.2.1. Assets service</a></li>
<li><a href="#static">7.2.2. Static</a></li>
</ul>
</li>
<li><a href="#error">7.3. Error</a></li>
<li><a href="#i18n">7.4. I18n</a></li>
<li><a href="#lib">7.5. Lib</a></li>
<li><a href="#services">7.6. Services</a></li>
<li><a href="#site">7.7. Site</a>
<ul class="sectlevel3">
<li><a href="#components">7.7.1. Components</a>
<ul class="sectlevel4">
<li><a href="#page">Page</a></li>
<li><a href="#layout">Layout</a></li>
<li><a href="#part">Part</a></li>
</ul>
</li>
<li><a href="#site_mappings">7.7.2. Site Mappings</a></li>
</ul>
</li>
<li><a href="#tasks">7.8. Tasks</a></li>
<li><a href="#webapp">7.9. Webapp</a></li>
</ul>
</li>
</ul>
</div>
</div>
<div id="content">
<div class="sect1">
<h2 id="features"><a class="link" href="#features">1. Features</a></h2>
<div class="sectionbody">
<div class="paragraph">
<p>Build:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Typescript support</p>
</li>
<li>
<p>Fast build times (<code>tsup</code> uses <code>esbuild</code> and <code>swc</code>)</p>
</li>
<li>
<p>Asynchronous (concurrent build targets)</p>
</li>
<li>
<p>Transpilation (TypeScript to JS)</p>
</li>
<li>
<p>Bundling</p>
</li>
<li>
<p>Tree-shaking</p>
</li>
<li>
<p>Polyfilling, injection and banner</p>
</li>
<li>
<p>Code splitting (chunks)</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>Enonic XP APIs:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Application (creation of virtual applications)</p>
</li>
<li>
<p>Project (creation and deletion of content projects)</p>
</li>
<li>
<p>Scheme (dynamic creation of content type schemas)</p>
</li>
<li>
<p>Task (submitting and managing server-side tasks)</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>UI:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Admin tool</p>
</li>
<li>
<p>Widgets</p>
</li>
<li>
<p>Page components</p>
</li>
<li>
<p>Use of React</p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect1">
<h2 id="create_project"><a class="link" href="#create_project">2. Create project</a></h2>
<div class="sectionbody">
<div class="paragraph">
<p>To set up a project locally, you will need Enonic CLI.</p>
</div>
<div class="admonitionblock tip">
<table>
<tr>
<td class="icon">
<i class="fa icon-tip" title="Tip"></i>
</td>
<td class="content">
<strong>Don&#8217;t have the Enonic CLI?</strong> Visit the <a href="https://developer.enonic.com/start">Getting started guide</a> to install it.
</td>
</tr>
</table>
</div>
<div class="paragraph">
<p>Once you have the CLI, run the following command to create a new Enonic project based on this starter:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-bash" data-lang="bash">enonic project create -r starter-tsup</code></pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="build_environment"><a class="link" href="#build_environment">3. Build environment</a></h2>
<div class="sectionbody">
<div class="sect2">
<h3 id="gradle"><a class="link" href="#gradle">3.1. Gradle</a></h3>
<div class="paragraph">
<p>Enonic projects are typically built with Gradle and come with bundled Gradle wrapper which we aim to keep up-to-date with the latest <a href="https://gradle.org/releases/">Gradle releases</a>.</p>
</div>
<div class="sect3">
<h4 id="version"><a class="link" href="#version">3.1.1. Version</a></h4>
<div class="paragraph">
<p>You can check which version of Gradle wrapper your project is using by issuing this command:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-bash" data-lang="bash">./gradlew --version</code></pre>
</div>
</div>
</div>
<div class="sect3">
<h4 id="upgrade"><a class="link" href="#upgrade">3.1.2. Upgrade</a></h4>
<div class="paragraph">
<p>You can upgrade your Gradle wrapper by issuing this command:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-bash" data-lang="bash">./gradlew wrapper --gradle-version latest</code></pre>
</div>
</div>
<div class="paragraph">
<p>Read more about <a href="https://docs.gradle.org/current/userguide/gradle_wrapper.html#sec:upgrading_wrapper">Upgrading the Gradle Wrapper</a>.</p>
</div>
</div>
</div>
<div class="sect2">
<h3 id="node"><a class="link" href="#node">3.2. Node</a></h3>
<div class="sect3">
<h4 id="version_2"><a class="link" href="#version_2">3.2.1. Version</a></h4>
<div class="paragraph">
<p>We suggest to keep your project on the latest LTS version of Node, which can be found <a href="https://nodejs.org/en/download/releases">here</a>.</p>
</div>
<div class="admonitionblock warning">
<table>
<tr>
<td class="icon">
<i class="fa icon-warning" title="Warning"></i>
</td>
<td class="content">
Some node modules don&#8217;t support the newest versions of Node (yet). In this case you might get build warnings or even errors. This can typically be solved by downgrading Node again or verifying (in <code>package.json</code>) whether version of the problematic module is outdated.
</td>
</tr>
</table>
</div>
</div>
<div class="sect3">
<h4 id="gradle_node_plugin"><a class="link" href="#gradle_node_plugin">3.2.2. Gradle node plugin</a></h4>
<div class="paragraph">
<p>The Tsup Starter uses the <a href="https://github.com/node-gradle/gradle-node-plugin">Gradle node plugin</a>, which is defined like this:</p>
</div>
<div class="listingblock">
<div class="title">build.gradle</div>
<div class="content">
<pre class="highlight"><code class="language-gradle" data-lang="gradle">plugins {
	id 'com.github.node-gradle.node' version '5.0.0'
}</code></pre>
</div>
</div>
<div class="paragraph">
<p>and configured like this:</p>
</div>
<div class="listingblock">
<div class="title">build.gradle</div>
<div class="content">
<pre class="highlight"><code class="language-gradle" data-lang="gradle">node {
	// Whether to download and install a specific Node.js version or not
	// If false, it will use the globally installed Node.js
	// If true, it will download node using above parameters
	// Note that npm is bundled with Node.js
	download = true

	// Version of node to download and install (only used if download is true)
	// It will be unpacked in the workDir
	version = "18.17.1"
}</code></pre>
</div>
</div>
<div class="paragraph">
<p>Any Gradle task that runs scripts in Node should depend on <code>npmInstall</code>:</p>
</div>
<div class="listingblock">
<div class="title">build.gradle</div>
<div class="content">
<pre class="highlight"><code class="language-gradle" data-lang="gradle">task.register('myTask', NpmTask) {
    dependsOn npmInstall
}</code></pre>
</div>
</div>
</div>
<div class="sect3">
<h4 id="system_node"><a class="link" href="#system_node">3.2.3. System Node</a></h4>
<div class="paragraph">
<p>Sometimes you want to run node scripts directly (not via Gradle). For example, to run Enonic XP in the <a href="#watch_mode">Watch mode</a>.</p>
</div>
<div class="admonitionblock tip">
<table>
<tr>
<td class="icon">
<i class="fa icon-tip" title="Tip"></i>
</td>
<td class="content">
<a href="https://github.com/nvm-sh/nvm">Node version manager</a> can be used to have multiple versions of Node at your fingertips.
</td>
</tr>
</table>
</div>
<div class="paragraph">
<p>In order to use the correct version of Node, use the following command:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-bash" data-lang="bash">nvm use</code></pre>
</div>
</div>
<div class="paragraph">
<p>It will use the version specified in the <code>.nvmrc</code> file:</p>
</div>
<div class="listingblock">
<div class="title">.nvmrc</div>
<div class="content">
<pre class="highlight"><code class="language-bash" data-lang="bash">18.17.1</code></pre>
</div>
</div>
</div>
</div>
<div class="sect2">
<h3 id="incremental_build"><a class="link" href="#incremental_build">3.3. Incremental build</a></h3>
<div class="quoteblock">
<blockquote>
An important part of any build tool is the ability to avoid doing work that has already been done.
</blockquote>
<div class="attribution">
&#8212; Gradle Inc
</div>
</div>
<div class="sect3">
<h4 id="continuous_build"><a class="link" href="#continuous_build">3.3.1. Continuous build</a></h4>
<div class="paragraph">
<p>Gradle does support <a href="https://docs.gradle.org/current/userguide/incremental_build.html">incremental build</a>, but using the <a href="https://docs.gradle.org/current/userguide/incremental_build.html#sec:task_input_output_continuous_build">continuous mode</a> is NOT the most efficient option. Gradle can detect file changes, but it doesn&#8217;t know much about the dependency tree of JavaScript files, i.e. which other files need to be recompiled once a single JavaScript file is changed. Gradle will simply rebuild "everything" by calling:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-bash" data-lang="bash">npm run build</code></pre>
</div>
</div>
<div class="paragraph">
<p>Tsup/esbuild doesn&#8217;t support filesystem caching, like <a href="https://webpack.js.org/configuration/cache/">Webpack</a>, but they do support <a href="https://tsup.egoist.dev/#watch-mode">watch mode</a>.</p>
</div>
</div>
<div class="sect3">
<h4 id="watch_mode"><a class="link" href="#watch_mode">3.3.2. Watch mode</a></h4>
<div class="paragraph">
<p>Tsup will watch files for changes and only recompile that file, and any files that depend on that file, and files that depend on them, and so on&#8230;&#8203;, but nothing else, i.e. the minimal amount of recompilation for a "complete" build. To make Tsup Starter "hot reload" client-side assets, execute the following command:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-bash" data-lang="bash">npm run watch</code></pre>
</div>
</div>
<div class="admonitionblock warning">
<table>
<tr>
<td class="icon">
<i class="fa icon-warning" title="Warning"></i>
</td>
<td class="content">
However, this does <strong>not</strong> produce a jar file, which is what Enonic XP requires to deploy apps.
</td>
</tr>
</table>
</div>
<div class="admonitionblock tip">
<table>
<tr>
<td class="icon">
<i class="fa icon-tip" title="Tip"></i>
</td>
<td class="content">
To run new code <strong>without</strong> redeploying an app, start the Enonic XP distribution in Development mode (by passing <code>--dev</code> argument to CLI command when starting an Enonic sandbox or deploying a project), then start the project in watch mode with the command above.
</td>
</tr>
</table>
</div>
</div>
<div class="sect3">
<h4 id="development_mode"><a class="link" href="#development_mode">3.3.3. Development mode</a></h4>
<div class="paragraph">
<p>Enonic XP can be run in a special mode known as <a href="https://developer.enonic.com/docs/xp/stable/apps/build-system#development_mode">Development mode</a>. In this mode, XP will read files directly from their source locations (<code>build/resources/main</code>, and even <code>src/main/resources</code>).</p>
</div>
<div class="admonitionblock caution">
<table>
<tr>
<td class="icon">
<i class="fa icon-caution" title="Caution"></i>
</td>
<td class="content">
In order for this to work, Enonic XP needs to know where those folders are. That information is contained within the app&#8217;s jar file. So you need to make an initial deployment of your jar file, or whenever you rearrange files in your project. Enonic XP will "fall back" to the jar file, if a file is not found in its source location. So when you delete a source file, it is probably a good idea to do a full build and redeploy a fresh jar file without the deleted file.
</td>
</tr>
</table>
</div>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="server_side_code"><a class="link" href="#server_side_code">4. Server-side code</a></h2>
<div class="sectionbody">
<div class="paragraph">
<p>The JavaScript ecosystem is advancing rapidly, using more and more modern features, which typically isn&#8217;t supported everywhere (yet).</p>
</div>
<div class="paragraph">
<p>In order to use modern features, transpilers are used to convert modern code into more stable versions of ECMAScript, and polyfills are used to provide APIs which are not present in the runtime environment.</p>
</div>
<div class="admonitionblock note">
<table>
<tr>
<td class="icon">
<i class="fa icon-note" title="Note"></i>
</td>
<td class="content">
Currently, Enonic XP JavaScript framework only has limited <code>ECAMScript 6/2015</code> support and supports only the <code>CommonJS module</code> (CJS) format.
</td>
</tr>
</table>
</div>
<div class="sect2">
<h3 id="java_libraries"><a class="link" href="#java_libraries">4.1. Java libraries</a></h3>
<div class="paragraph">
<p>In order to use Enonic XP <strong>Java</strong> API libraries in your code, the following steps are required:</p>
</div>
<div class="sect3">
<h4 id="include"><a class="link" href="#include">4.1.1. Include</a></h4>
<div class="paragraph">
<p>Include a Java library in your <code>build.gradle</code>:</p>
</div>
<div class="listingblock">
<div class="title">build.gradle</div>
<div class="content">
<pre class="highlight"><code class="language-gradle" data-lang="gradle">dependencies {
    include "com.enonic.xp:lib-portal:${xpVersion}"
}</code></pre>
</div>
</div>
</div>
<div class="sect3">
<h4 id="externals"><a class="link" href="#externals">4.1.2. Externals</a></h4>
<div class="paragraph">
<p>Jar file of a Java library typically contains a CJS wrapper which is required at runtime.</p>
</div>
<div class="paragraph">
<p>The contents of the jar file is NOT available at compile time, so it cannot be bundled. Instead, we tell the transpiler to treat the library import path as an external (expecting it to exist at runtime).</p>
</div>
<div class="listingblock">
<div class="title">/tsup/server.ts</div>
<div class="content">
<pre class="highlight"><code class="language-typescript" data-lang="typescript">external: [
    /^\/lib\/xp\//,
]</code></pre>
</div>
</div>
</div>
<div class="sect3">
<h4 id="import"><a class="link" href="#import">4.1.3. Import</a></h4>
<div class="listingblock">
<div class="title">/src/main/resources/site/page/examplePage/examplePage.ts</div>
<div class="content">
<pre class="highlight"><code class="language-typescript" data-lang="typescript">import { getContent } from '/lib/xp/portal';

export function get() {
    const {
        displayName,
        page: {
            regions
        }
    } = getContent();
}</code></pre>
</div>
</div>
</div>
</div>
<div class="sect2">
<h3 id="node_modules"><a class="link" href="#node_modules">4.2. Node modules</a></h3>
<div class="paragraph">
<p>You can use node modules in your code, but there are come steps/caveats to consider:</p>
</div>
<div class="sect3">
<h4 id="installing"><a class="link" href="#installing">4.2.1. Installing</a></h4>
<div class="paragraph">
<p>You can use the following command to install a node module you want to use (for example, <code>sha.js</code>):</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-bash" data-lang="bash">npm install --save sha.js</code></pre>
</div>
</div>
<div class="paragraph">
<p>This will add <code>sha.js</code> under dependencies in the <code>package.json</code> file, and download and extract the package into <code>node_modules</code> folder of your project.</p>
</div>
</div>
<div class="sect3">
<h4 id="bundling"><a class="link" href="#bundling">4.2.2. Bundling</a></h4>
<div class="paragraph">
<p>By default, Tsup starter bundles all imported modules <a href="https://tsup.egoist.dev/#excluding-packages">EXCEPT</a> dependencies and peerDependencies. Since sha.js (in the example above) is added as a dependency, it will <span class="red">NOT</span> be bundled!</p>
</div>
<div class="paragraph">
<p>To fix that we have to list it under <code>noExternals</code>:</p>
</div>
<div class="listingblock">
<div class="title">/tsup/server.ts</div>
<div class="content">
<pre class="highlight"><code class="language-typescript" data-lang="typescript">noExternal: [
    'sha.js',
],</code></pre>
</div>
</div>
</div>
<div class="sect3">
<h4 id="polyfill_node"><a class="link" href="#polyfill_node">4.2.3. Polyfill Node</a></h4>
<div class="admonitionblock caution">
<table>
<tr>
<td class="icon">
<i class="fa icon-caution" title="Caution"></i>
</td>
<td class="content">
Node modules are typically run in Node, and thus expect Node APIs to be present, which is not always the case.
</td>
</tr>
</table>
</div>
<div class="paragraph">
<p>For example, the <code>sha.js</code> module expects buffer to exist in the global scope, but it does NOT exist in the Enonic XP JavaScript framework runtime environment.</p>
</div>
<div class="paragraph">
<p>We can use <a href="https://www.npmjs.com/package/esbuild-plugin-polyfill-node">esbuild-plugin-polyfill-node</a> to selectively polyfill only the parts of Node that is used by the node module:</p>
</div>
<div class="listingblock">
<div class="title">/tsup/server.ts</div>
<div class="content">
<pre class="highlight"><code class="language-typescript" data-lang="typescript">import { polyfillNode } from 'esbuild-plugin-polyfill-node';

esbuildPlugins: [
    polyfillNode: {
        globals: {
            buffer: true
        },
        polyfills: {
            buffer: true
        }
    }
]</code></pre>
</div>
</div>
</div>
<div class="sect3">
<h4 id="the_global_object"><a class="link" href="#the_global_object">4.2.4. The Global object</a></h4>
<div class="paragraph">
<p>Different JavaScript runtime environments have different properties on their <a href="https://developer.mozilla.org/en-US/docs/Glossary/Global_object">Global object</a></p>
</div>
<div class="paragraph">
<p>In addition, they even have different ways of accessing the Global object.</p>
</div>
<div class="paragraph">
<p><a href="https://262.ecma-international.org/11.0/#sec-globalthis">globalThis</a>, introduced in ES2020 aims to consolidate the increasingly fragmented ways of accessing the Global object.</p>
</div>
<div class="paragraph">
<p>Some node modules support multiple runtime environments, and use the properties of the Global object to determine what runtime environment the code is running in.</p>
</div>
<div class="admonitionblock caution">
<table>
<tr>
<td class="icon">
<i class="fa icon-caution" title="Caution"></i>
</td>
<td class="content">
One might be tempted to polyfill all the ways of accessing the Global object, but that will typically break node modules that are trying to detect the runtime environment.
</td>
</tr>
</table>
</div>
<div class="paragraph">
<p>To make matters worse, some of the polyfills themselves expect things to be a certain way.</p>
</div>
<div class="paragraph">
<p>For example, polyfilling of buffer only works if it can apply itself on the Global object. In the Enonic XP JavaScript framework, each controller runs in its own "sandbox" environment, so there really isn&#8217;t a Global object, there is rather a controller scope "local" object. In order for the buffer polyfill to work we can simply make <code>globalThis</code> point to the controller scope:</p>
</div>
<div class="listingblock">
<div class="title">/tsup/server.ts</div>
<div class="content">
<pre class="highlight"><code class="language-typescript" data-lang="typescript">esbuildOptions(options, context) {
    options.banner = {
        js: `const globalThis = (1, eval)('this');`
    };
}</code></pre>
</div>
</div>
</div>
<div class="sect3">
<h4 id="injection"><a class="link" href="#injection">4.2.5. Injection</a></h4>
<div class="paragraph">
<p>Sometimes all you need to polyfill is a <code>single function</code> rather than a whole API.</p>
</div>
<div class="paragraph">
<p><a href="https://github.com/zloirock/core-js" class="bare">github.com/zloirock/core-js</a> provides a bunch of such minimal <code>single function</code> polyfills.</p>
</div>
<div class="admonitionblock tip">
<table>
<tr>
<td class="icon">
<i class="fa icon-tip" title="Tip"></i>
</td>
<td class="content">
If you only use <code>the function</code> in a single place, you can simply import the polyfill in that single file.
But if you are using <code>the function</code> all over the place, you can use injection to make it work everywhere:
</td>
</tr>
</table>
</div>
<div class="listingblock">
<div class="title">/tsup/server.ts</div>
<div class="content">
<pre class="highlight"><code class="language-typescript" data-lang="typescript">inject: [
    'node_modules/core-js/stable/array/includes.js'
]</code></pre>
</div>
</div>
</div>
<div class="sect3">
<h4 id="environment_variable_replacement"><a class="link" href="#environment_variable_replacement">4.2.6. Environment variable replacement</a></h4>
<div class="paragraph">
<p>Sometimes you need to replace environment variables in your code, for example, when you want to use different values in development and production environments, or when you want to use secrets or configuration which are not checked into source control.</p>
</div>
<div class="paragraph">
<p>In the starter there is an example of how to do this.</p>
</div>
<div class="paragraph">
<p>At compiletime we&#8217;re setting the <code>BROWSER_SYNC_PORT</code> environment variable to <code>3000</code>:</p>
</div>
<div class="listingblock">
<div class="title">/tsup/server.ts</div>
<div class="content">
<pre class="highlight"><code class="language-typescript" data-lang="typescript">return {
    // ...
    env: {
        BROWSER_SYNC_PORT: '3000',
    },
    // ...
}</code></pre>
</div>
</div>
<div class="paragraph">
<p>Then in the code we&#8217;re using the <code>BROWSER_SYNC_PORT</code> environment variable via <code>process.env</code>:</p>
</div>
<div class="listingblock">
<div class="title">/src/main/resources/lib/browserSync.ts</div>
<div class="content">
<pre class="highlight"><code class="language-typescript" data-lang="typescript">return `${scheme}://${host}:${
    // @ts-expect-error Is replaced at build time by tsup:
    process.env.BROWSER_SYNC_PORT
}/browser-sync/browser-sync-client.js`;</code></pre>
</div>
</div>
<div class="admonitionblock note">
<table>
<tr>
<td class="icon">
<i class="fa icon-note" title="Note"></i>
</td>
<td class="content">
The <code>process</code> object is only available in the Node runtime environment, so it will not work in Enonic XP server-side environment. But since TSUP replaces <code>process.env.BROWSER_SYNC_PORT</code> with the string <code>3000</code> at compile-time, there is no problem. The transpiled code will look something like this:
</td>
</tr>
</table>
</div>
<div class="listingblock">
<div class="title">/build/resources/main/lib/browserSync.js</div>
<div class="content">
<pre class="highlight"><code class="language-javascript" data-lang="javascript">return "".concat(scheme, "://").concat(host, ":", "3000", "/browser-sync/browser-sync-client.js");</code></pre>
</div>
</div>
</div>
<div class="sect3">
<h4 id="code_splitting"><a class="link" href="#code_splitting">4.2.7. Code splitting</a></h4>
<div class="admonitionblock caution">
<table>
<tr>
<td class="icon">
<i class="fa icon-caution" title="Caution"></i>
</td>
<td class="content">
Everything you add via imports, polyfills, banners, injections, etc increases the size of the resources which need to be loaded into memory at runtime. The more you add, the longer the warmup time becomes.
</td>
</tr>
</table>
</div>
<div class="paragraph">
<p>In order to avoid loading the same code multiple times, shared code is split into chunk files, which are only loaded once, but can be used many times via require in the JavaScript controllers.</p>
</div>
<div class="paragraph">
<p>It&#8217;s sort of like all the shared code exists in the global scope and don&#8217;t need to be loaded.</p>
</div>
<div class="admonitionblock warning">
<table>
<tr>
<td class="icon">
<i class="fa icon-warning" title="Warning"></i>
</td>
<td class="content">
An Enonic XP application jar file only has a single "root folder" which all libs are "merged" into, which can potentially cause file name collisions.
</td>
</tr>
</table>
</div>
<div class="admonitionblock note">
<table>
<tr>
<td class="icon">
<i class="fa icon-note" title="Note"></i>
</td>
<td class="content">
Libraries typically avoid file name collisions by using their own "namespace" inside the /lib folder.
</td>
</tr>
</table>
</div>
<div class="paragraph">
<p>When it comes to files autogenerated by a build system, for example chunk files, they also need their own "namespace".</p>
</div>
<div class="paragraph">
<p>In Tsup Starter we can "name space" its chunks like this:</p>
</div>
<div class="listingblock">
<div class="title">/tsup/server.ts</div>
<div class="content">
<pre class="highlight"><code class="language-typescript" data-lang="typescript">esbuildOptions(options, context) {
    options.chunkNames = 'myAppChunks/[name]-[hash]';
}</code></pre>
</div>
</div>
</div>
</div>
<div class="sect2">
<h3 id="tree_shaking"><a class="link" href="#tree_shaking">4.3. Tree-shaking</a></h3>
<div class="paragraph">
<p>Tree shaking refers to the process of eliminating or "shaking off" dead code or unused code from the final bundled output. Tools that support tree-shaking typically only work with the <code>ECMAScript module</code> (ESM) format.</p>
</div>
<div class="paragraph">
<p>Tsup Starter uses <code>esbuild</code> to transpile sources into ESM so that tree-shaking can be applied.</p>
</div>
<div class="paragraph">
<p>Then it uses <code>swc</code> to transpile the code back to CJS (the format supported by Enonic XP JavaScript framework).</p>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="client_side"><a class="link" href="#client_side">5. Client-side</a></h2>
<div class="sectionbody">
<div class="paragraph">
<p>Client-side and Server-side are web development terms that describe where application code runs.</p>
</div>
<div class="paragraph">
<p>When people talk about "the client-side", they typically just mean their web browser, not considering other <a href="https://developer.mozilla.org/en-US/docs/Glossary/User_agent">User-Agents</a> like bots/robots/web-crawlers, headless browsers, legacy browsers or even other modern browser alternatives :)</p>
</div>
<div class="paragraph">
<p>In the context of build systems, the source code is processed in different ways, depending upon which <code>target plarform</code> the code is supposed to run on.</p>
</div>
<div class="paragraph">
<p>There are many ways of developing client-side code in Enonic XP:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>The most common way is to use the <a href="#assets">Assets</a> folder.</p>
</li>
<li>
<p>It can be improved upon by using <a href="#static">lib-static</a>.</p>
</li>
<li>
<p>It can be provided by <a href="#services">Services</a>, <a href="#site_mappings">Site Mappings</a>, <a href="#webapp">Webapp</a>, or <a href="#admin">Admin</a>.</p>
</li>
<li>
<p>Client-side code can be inlined in <a href="#components">controllers</a>.</p>
</li>
<li>
<p>Web frameworks like <a href="#react">React</a> can be used.</p>
</li>
<li>
<p><a href="#content_security_policy">Content Security Policy</a> is enabled by default and can be configured for improved security.</p>
</li>
</ul>
</div>
<div class="sect2">
<h3 id="content_security_policy"><a class="link" href="#content_security_policy">5.1. Content Security Policy</a></h3>
<div class="paragraph">
<p><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP">Content Security Policy (CSP)</a> makes it possible to configure what is allowed to run on the client-side. You can limit scripts, images, media and stylesheets. You can even configure if and how violations are reported.</p>
</div>
<div class="paragraph">
<p>Enonic XP has some configurable <a href="https://developer.enonic.com/docs/content-studio/stable/security#content_security_policy">Content Security Policy</a> defaults, but you can override these by using the <code>content-security-policy</code> response header (or a <code>&lt;meta http-equiv="Content-Security-Policy"/&gt;</code> tag in html head).</p>
</div>
</div>
<div class="sect2">
<h3 id="react"><a class="link" href="#react">5.2. React</a></h3>
<div class="paragraph">
<p>Tsup Starter is able to transpile React TSX/JSX source files into JavaScript code for the browser.</p>
</div>
<div class="paragraph">
<p>The Starter includes two main ways of doing this. Read more under <a href="#assets">Assets</a>.</p>
</div>
<div class="admonitionblock tip">
<table>
<tr>
<td class="icon">
<i class="fa icon-tip" title="Tip"></i>
</td>
<td class="content">
If you need Server-side Rendering (SSR), use <a href="https://developer.enonic.com/docs/react4xp/">React4xp</a>.
</td>
</tr>
</table>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="tools"><a class="link" href="#tools">6. Tools</a></h2>
<div class="sectionbody">
<div class="sect2">
<h3 id="code_completion"><a class="link" href="#code_completion">6.1. Code completion</a></h3>
<div class="paragraph">
<p>When programming, it&#8217;s very useful to get <code>code completion</code> and <a href="#type_checking">Type checking</a> directly in the code editor.
To enable this, IDE will typically look for <a href="#_tsconfig_json">tsconfig.json</a> files.</p>
</div>
</div>
<div class="sect2">
<h3 id="type_checking"><a class="link" href="#type_checking">6.2. Type checking</a></h3>
<div class="paragraph">
<p>In addition to <code>type checking</code> directly in the IDE, it&#8217;s a good idea to make <code>type checking</code> part of the build process.
In Tsup Starter this is set up via <code>check</code> statements in the scripts section of the <code>package.json</code> file. Type checking is currently skipped for development builds.</p>
</div>
<div class="paragraph">
<p>The <code>check:types:*</code> scripts uses the same <a href="#_tsconfig_json">tsconfig.json</a> files as IDE&#8217;s.</p>
</div>
</div>
<div class="sect2">
<h3 id="tsconfig_json"><a class="link" href="#tsconfig_json">6.3. tsconfig.json</a></h3>
<div class="paragraph">
<p>Tsup Starter comes with three <code>tsconfig.json</code> files:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>${PROJECT_DIR}/tsconfig.json</p>
</li>
<li>
<p>${PROJECT_DIR}/src/main/resources/assets/tsconfig.json</p>
</li>
<li>
<p>${PROJECT_DIR}/src/main/resources/static/tsconfig.json</p>
</li>
</ol>
</div>
<div class="paragraph">
<p>The <code>tsconfig.json</code> file at the root of the project is used for all code processing (except the <code>assets</code> and <code>static</code> folders which are handled by their own), and is configured to match the Enonic XP server-side runtime environment.</p>
</div>
<div class="paragraph">
<p>The two <code>tsconfig.json</code> files in <code>assets</code> and <code>static</code> are identical and configured for client-side runtime environment.</p>
</div>
<div class="admonitionblock warning">
<table>
<tr>
<td class="icon">
<i class="fa icon-warning" title="Warning"></i>
</td>
<td class="content">
Do NOT set target in the ${PROJECT_DIR}/tsconfig.json, it will probably break the build. Target should always be set to 'es5' in the <code>${PROJECT_DIR}/tsup/server.ts</code> file.
</td>
</tr>
</table>
</div>
<div class="admonitionblock tip">
<table>
<tr>
<td class="icon">
<i class="fa icon-tip" title="Tip"></i>
</td>
<td class="content">
Sometimes a folder may contain both code for the server-side and the client-side. Using different <code>include</code> and <code>exclude</code> lists in multiple <code>tsconfig.*.json</code> files makes it possible to configure strict type-checking for all code in those folders, to be run as part of the build process.
</td>
</tr>
</table>
</div>
<div class="paragraph">
<p>It seems IDE&#8217;s are only able to read a single <code>tsconfig.json</code> file per folder, so it&#8217;s currently only possible to se tup relaxed/permissive type checking when server and client side code is "mixed". Let us know if you discover a way to set up strict type-checking. 🙏</p>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="code_hierarchy"><a class="link" href="#code_hierarchy">7. Code Hierarchy</a></h2>
<div class="sectionbody">
<div class="sect2">
<h3 id="admin"><a class="link" href="#admin">7.1. Admin</a></h3>
<div class="paragraph">
<p>Extensions of Admin UI are located in <code>src/main/resources/admin</code>.</p>
</div>
<div class="sect3">
<h4 id="tool"><a class="link" href="#tool">7.1.1. Tool</a></h4>
<div class="paragraph">
<p>There is an admin tool called "Sample Tool" included in the Starter, located in <code>src/main/resources/admin/tools/tool</code>. When a project based on this starter is deployed, you will see it inside the XP menu.</p>
</div>
<div class="imageblock">
<div class="content">
<img src="images/admin-tool-menu.png" alt="Admin Tool menu" width="50%">
</div>
</div>
<div class="paragraph">
<p>Click "Sample Tool" in the menu to open the tool.</p>
</div>
<div class="imageblock">
<div class="content">
<img src="images/admin-tool.png" alt="Admin Tool" width="50%">
</div>
</div>
<div class="paragraph">
<p>What you see here is essentially a <strong>React</strong> app inside the Admin Tool. If you open browser console, you will see a log message there saying something like</p>
</div>
<div class="literalblock">
<div class="content">
<pre>react-dom.development-1B959UOCEC1QW.js:29850 Download the React DevTools for a better development experience: https://reactjs.org/link/react-devtools</pre>
</div>
</div>
<div class="literalblock">
<div class="content">
<pre>App.tsx:11 Hello from React inside an Admin Tool. React app id: {
 "id": ":r0:"
}</pre>
</div>
</div>
<div class="paragraph">
<p>We have also added an example of importing an external Node module called <strong>Day.js</strong> which allows you to easily handle date/time operations.</p>
</div>
<div class="paragraph">
<p>Both of these integrations (<strong>React</strong> and <strong>Day.js</strong>) can be found in <code>src/main/resources/static/admin/App.tsx</code>.</p>
</div>
</div>
<div class="sect3">
<h4 id="widgets"><a class="link" href="#widgets">7.1.2. Widgets</a></h4>
<div class="paragraph">
<p>The starter includes examples for the following widget interfaces:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Dashboard (src/main/resources/widgets/dashboard/)</p>
</li>
<li>
<p>Context panel (src/main/resources/widgets/contextPanel/)</p>
</li>
<li>
<p>Menu-item (src/main/resources/widgets/menuItem/)</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="dashboard"><a class="link" href="#dashboard">7.1.3. Dashboard</a></h4>
<div class="paragraph">
<p>The Dashboard widget (titled "Sample dashboard widget") will be shown on the XP Dashboard page when you log in into Admin console.</p>
</div>
<div class="imageblock">
<div class="content">
<img src="images/widget-dashboard.png" alt="Dashboard widget" width="50%">
</div>
</div>
<div class="admonitionblock important">
<table>
<tr>
<td class="icon">
<i class="fa icon-important" title="Important"></i>
</td>
<td class="content">
The next two widgets are extensions of Content Studio, so you&#8217;ll need to install it first.
</td>
</tr>
</table>
</div>
</div>
<div class="sect3">
<h4 id="menu_item"><a class="link" href="#menu_item">7.1.4. Menu item</a></h4>
<div class="paragraph">
<p>Content Studio has a menu on the left-hand side and this widget&#8217;s icon will appear in this menu.</p>
</div>
<div class="imageblock">
<div class="content">
<img src="images/widget-menu.png" alt="Menu item widget" width="50%">
</div>
</div>
</div>
<div class="sect3">
<h4 id="context_panel"><a class="link" href="#context_panel">7.1.5. Context panel</a></h4>
<div class="paragraph">
<p>You&#8217;ll find this widget inside the Context Panel on the right hand side of Content Studio&#8217;s. This panel can be opened by clicking the burger icon under the XP menu icon.</p>
</div>
<div class="imageblock">
<div class="content">
<img src="images/widget-context.png" alt="Context panel widget" width="50%">
</div>
</div>
<div class="admonitionblock note">
<table>
<tr>
<td class="icon">
<i class="fa icon-note" title="Note"></i>
</td>
<td class="content">
The last two widgets are using inline styling, but you can define CSS styles in a stylesheet and plug it in the same way as it&#8217;s done in the Dashboard widget (or have one stylesheet shared by all the widgets, depending on your architecture).
</td>
</tr>
</table>
</div>
</div>
</div>
<div class="sect2">
<h3 id="assets"><a class="link" href="#assets">7.2. Assets</a></h3>
<div class="paragraph">
<p>Tsup Starter provides examples for two main ways of serving client-side assets:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Either from the <code>assets</code> folder (<code>src/main/resources/assets</code>) via the <a href="#assets_service">Assets service</a></p>
</li>
<li>
<p>Or from the <a href="#static">Static</a> folder (<code>src/main/resources/static</code>) via <a href="#site_mappings">Site Mappings</a> or <a href="#webapp">Webapp</a> (even <a href="#admin">Admin</a>)</p>
</li>
</ol>
</div>
<div class="admonitionblock tip">
<table>
<tr>
<td class="icon">
<i class="fa icon-tip" title="Tip"></i>
</td>
<td class="content">
We recommend using the <a href="#static">Static</a> folder, since it enables immutable urls - urls that can be cached "forever".
</td>
</tr>
</table>
</div>
<div class="sect3">
<h4 id="assets_service"><a class="link" href="#assets_service">7.2.1. Assets service</a></h4>
<div class="admonitionblock warning">
<table>
<tr>
<td class="icon">
<i class="fa icon-warning" title="Warning"></i>
</td>
<td class="content">
Any files in the <code>assets</code> folder are PUBLICLY available to EVERYONE via the <a href="https://developer.enonic.com/docs/xp/stable/runtime/engines/asset-service">Assets service</a>. If you need some security, do NOT put files in the <code>assets</code> folder. Rather put them somewhere else, write your own controllers and implement some level of security.
</td>
</tr>
</table>
</div>
<div class="admonitionblock tip">
<table>
<tr>
<td class="icon">
<i class="fa icon-tip" title="Tip"></i>
</td>
<td class="content">
Any <a href="https://developer.enonic.com/docs/xp/stable/api/lib-portal#asseturl">assetUrl</a> includes a built-in hash number. Which means, everytime you deploy a new build the url changes. So even though the asset files are probably <span class="red">NOT changed</span>, they are still re-downloaded by the browser. Which is why we recommend using the <a href="#static">Static</a> folder instead.
</td>
</tr>
</table>
</div>
</div>
<div class="sect3">
<h4 id="static"><a class="link" href="#static">7.2.2. Static</a></h4>
<div class="paragraph">
<p>Files in the <code>static</code> folder are not available via the <a href="#assets_service">Assets service</a>. Instead, they are made available via the <a href="https://developer.enonic.com/docs/static-asset-lib/master">Static Assets Library</a>.</p>
</div>
<div class="paragraph">
<p>In order to enable immutable urls, a content hash is added to the files names at compile time. The content hash is generated from the file content (and location) and only changes, if the content (or location) of the file changes. This means that the browser can cache the asset "forever", and every time it encounters the url, it can simply load the asset from the cache.</p>
</div>
<div class="paragraph">
<p>Whenever you change a file, it will have a new content hash and thus a new url. In order for the browser to load the new url, the html response from the server needs to provide the new url. This is made possible with a <code>manifest</code> file, which contains mapping of original assets with their current content hash.</p>
</div>
<div class="paragraph">
<p>There are many ways of serving the files from the <code>static</code> folder to the browser. The Starter contains examples on how it can be done.</p>
</div>
<div class="paragraph">
<p>If you are writing code inside the <a href="#site">Site</a> folder, we recommend using <code>/lib/getImmuteableUrl</code>.</p>
</div>
<div class="paragraph">
<p>If you are writing code inside the <a href="#webapp">Webapp</a> folder, we recommend using <code>/webapp/getImmuteableWebappUrl</code>.</p>
</div>
<div class="paragraph">
<p>If you are writing code inside the <a href="#admin">Admin</a> folder, we recommend using <code>/admin/tools/exampleTool/getImmuteableAdminUrl</code>.</p>
</div>
</div>
</div>
<div class="sect2">
<h3 id="error"><a class="link" href="#error">7.3. Error</a></h3>
<div class="paragraph">
<p>The starter includes an example error controller.</p>
</div>
</div>
<div class="sect2">
<h3 id="i18n"><a class="link" href="#i18n">7.4. I18n</a></h3>
<div class="paragraph">
<p>The starter includes a couple phrases files.</p>
</div>
</div>
<div class="sect2">
<h3 id="lib"><a class="link" href="#lib">7.5. Lib</a></h3>
<div class="paragraph">
<p>The starter includes several lib examples.</p>
</div>
</div>
<div class="sect2">
<h3 id="services"><a class="link" href="#services">7.6. Services</a></h3>
<div class="paragraph">
<p>The starter includes an example service.</p>
</div>
</div>
<div class="sect2">
<h3 id="site"><a class="link" href="#site">7.7. Site</a></h3>
<div class="sect3">
<h4 id="components"><a class="link" href="#components">7.7.1. Components</a></h4>
<div class="sect4">
<h5 id="page"><a class="link" href="#page">Page</a></h5>
<div class="paragraph">
<p>The starter includes an example page component.</p>
</div>
</div>
<div class="sect4">
<h5 id="layout"><a class="link" href="#layout">Layout</a></h5>
<div class="paragraph">
<p>The starter includes an example layout component.</p>
</div>
</div>
<div class="sect4">
<h5 id="part"><a class="link" href="#part">Part</a></h5>
<div class="paragraph">
<p>The starter includes an example part component.</p>
</div>
</div>
</div>
<div class="sect3">
<h4 id="site_mappings"><a class="link" href="#site_mappings">7.7.2. Site Mappings</a></h4>
<div class="paragraph">
<p>The starter includes an example site mapping.</p>
</div>
</div>
</div>
<div class="sect2">
<h3 id="tasks"><a class="link" href="#tasks">7.8. Tasks</a></h3>
<div class="paragraph">
<p>The starter includes a couple tasks controller examples.</p>
</div>
</div>
<div class="sect2">
<h3 id="webapp"><a class="link" href="#webapp">7.9. Webapp</a></h3>
<div class="paragraph">
<p>The starter includes an example webapp controller.</p>
</div>
</div>
</div>
</div>
</div>
<div id="footer">
<div id="footer-text">
Last updated 2023-09-04 09:49:38 UTC
</div>
</div>
</body>
</html>